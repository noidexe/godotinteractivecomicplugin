[gd_scene load_steps=4 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

\"\"\"
Music singleton that handles crossfading when a new song starts
and applies a low pass filter when the game is paused. Nothing too wise
\"\"\"

# MUSIC
onready var music_track_a : AudioStreamPlayer = $Music/A
onready var music_track_b : AudioStreamPlayer = $Music/B
onready var music_transitions : AnimationPlayer = $Music/anims
onready var current_track : AudioStreamPlayer = music_track_a
var current_music_stream : AudioStream
var music_bus : int

# SFX
onready var sfx_channels : Array = $Sfx.get_children()
onready var sfx_total_channels : int = $Sfx.get_child_count()
var sfx_current_channel : int = 0

func _ready():
	music_bus = AudioServer.get_bus_index(\"Music\")
	if music_bus == -1:
		music_bus = AudioServer.bus_count
		AudioServer.add_bus(music_bus)
		AudioServer.set_bus_name(music_bus, \"Music\")
	music_track_a.bus = \"Music\"
	music_track_b.bus = \"Music\"

func play_music(stream : AudioStream):
	if current_music_stream and current_music_stream == stream:
		return
	current_music_stream = stream
	if current_track == music_track_a:
		music_track_b.stream = stream
		music_transitions.play(\"AtoB\")
		current_track = music_track_b
	else:
		music_track_a.stream = stream
		music_transitions.play(\"BtoA\")
		current_track = music_track_a

func play_sfx(stream : AudioStream):
	var ch : AudioStreamPlayer = sfx_channels[sfx_current_channel]
	ch.stream = stream
	ch.play()
	sfx_current_channel = wrapi(sfx_current_channel + 1, 0, sfx_total_channels)
"

[sub_resource type="Animation" id=2]
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath("Music/A:volume_db")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, -30.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Music/B:volume_db")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ -30.0, 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Music/A:playing")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.2 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Music/B:playing")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=3]
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath("Music/A:volume_db")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ -30.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Music/B:volume_db")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, -30.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Music/B:playing")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.2 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Music/A:playing")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[node name="AudioPlayer" type="Node"]
pause_mode = 2
script = SubResource( 1 )

[node name="Music" type="Node" parent="."]

[node name="A" type="AudioStreamPlayer" parent="Music"]
volume_db = -30.0

[node name="B" type="AudioStreamPlayer" parent="Music"]

[node name="anims" type="AnimationPlayer" parent="Music"]
root_node = NodePath("../..")
anims/AtoB = SubResource( 2 )
anims/BtoA = SubResource( 3 )

[node name="Sfx" type="Node" parent="."]

[node name="ch0" type="AudioStreamPlayer" parent="Sfx"]

[node name="ch1" type="AudioStreamPlayer" parent="Sfx"]

[node name="ch2" type="AudioStreamPlayer" parent="Sfx"]

[node name="ch3" type="AudioStreamPlayer" parent="Sfx"]

[node name="ch4" type="AudioStreamPlayer" parent="Sfx"]

[node name="ch5" type="AudioStreamPlayer" parent="Sfx"]
